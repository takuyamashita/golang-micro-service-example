version: '3'

services:
  front-end:
    build:
      context: ./front-end
      dockerfile: ./front-end.dev.dockerfile
    volumes:
      - ./front-end:/app
    working_dir: /app
    tty: true
    restart: always
    ports:
      - 8888:80
    #command: air
    deploy:
      mode: replicated
      replicas: 1

  broker-service:
    build:
      context: ./broker-service
      dockerfile: ./broker-service.dev.dockerfile
    volumes:
      - ./broker-service:/app
    working_dir: /app
    tty: true
    restart: always
    ports:
      - 8080:80
    #command: air
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: ./authentication-service.dev.dockerfile
    volumes:
      - ./authentication-service:/app
    working_dir: /app
    tty: true
    restart: always
    ports:
      - 8081:80
    #command: air
    depends_on:
      - postgres
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    build:
      context: ./logger-service
      dockerfile: ./logger-service.dev.dockerfile
    volumes:
      - ./logger-service:/app
    working_dir: /app
    tty: true
    restart: always
    #command: air
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    build:
      context: ./mail-service
      dockerfile: ./mail-service.dev.dockerfile
    volumes:
      - ./mail-service:/app
    working_dir: /app
    tty: true
    restart: always
    #command: air
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: Yamashita
      FROM_ADDRESS: YAMASHITA@yamashita.com
  
  listener-service:
    build: 
      context: ./listener-service
      dockerfile: ./listener-service.dev.dockerfile
    volumes:
      - ./listener-service:/app
    working_dir: /app
    tty: true
    restart: always
    #command: air
    deploy:
      mode: replicated
      replicas: 1
  

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  
  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
  
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - 1025:1025
      - 8025:8025
  
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: password
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq:/var/lib/rabbitmq